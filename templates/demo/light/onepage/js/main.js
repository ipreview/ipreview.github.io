// Generated by CoffeeScript 1.6.1

/*
=General
*/


(function() {

  $(function() {
    var $window, date, insert, nav, resizeTimer;
    $window = $(window);
    if ($('.flexnav').length && $.fn.flexNav) {
      $(".flexnav").flexNav({
        'animationSpeed': 'fast'
      });
    }
    $window.load(function() {
      setTimeout("$('#loading').animate(			{'opacity': '0'}, 300, function() {$('#loading').hide()}		)", 500);
      return setTimeout("$( '.main-content, .content_wrapper' ).animate(			{'opacity': '1'}, 500		)", 500);
    });
    $('body').prepend('<div class="icons-go-top"></div>');
    $window.on('scroll', function() {
      if ($(this).scrollTop() > 300) {
        return $('.icons-go-top').fadeIn(300);
      } else {
        return $('.icons-go-top').fadeOut(300);
      }
    });
    $('.icons-go-top').click(function() {
      return $('html, body').animate({
        scrollTop: 0
      }, 300);
    });
    $(".post-isotope").add(".post").add(".item-portfolio").each(function() {
      $(this).prepend('<span class="top-left"></span><span class="top-right"></span><span class="bottom-right"></span><span class="bottom-left"></span>');
    });
    if ($("a[data-gal^='prettyPhoto']").length && $.fn.prettyPhoto) {
      $("a[data-gal^='prettyPhoto']").prettyPhoto({
        hook: 'data-gal'
      });
      $("a[data-gal^='prettyPhoto']").prettyPhoto({
        social_tools: false,
        animation_speed: 'fast',
        slideshow: 5000,
        autoplay_slideshow: false,
        opacity: 0.80,
        show_title: false,
        allow_resize: true,
        default_width: 500,
        default_height: 344,
        counter_separator_label: '/',
        theme: 'pp_default',
        horizontal_padding: 20,
        hideflash: false,
        wmode: 'opaque',
        autoplay: true,
        modal: false,
        deeplinking: false,
        overlay_gallery: false,
        keyboard_shortcuts: false,
        ie6_fallback: false
      });
    }
    if ($('.responsive-video').length && $.fn.fitVids) {
      $(".responsive-video").fitVids();
    }
    if (($('audio').length)) {
      $('audio').mediaelementplayer();
      $('.mejs-audio').css('display', 'inline-block');
    }
    if ($('.tooltip-display').length && $.fn.tooltip) {
      $('.tooltip-display').tooltip();
    }
    if (($('.toggler').length)) {
      $('.toggler .toggler-heading').each(function() {
        var answer;
        answer = $(this).parent('li').children('.toggler-body');
        answer.slideUp();
        return $(this).click(function() {
          answer.slideToggle();
          return $(this).parent('li').toggleClass('active');
        });
      });
    }
    if (($('#left_sidebar').length)) {
      $window = $(window);
      resizeTimer = null;
      if ($window.width() <= 767) {
        $('#left_sidebar').insertAfter('#blog_posts');
      } else if ($window.width() > 767) {
        $('#left_sidebar').insertBefore('#blog_posts');
      }
      $window.resize(function() {
        clearTimeout(resizeTimer);
        return resizeTimer = setTimeout(insert, 200);
      });
      insert = function() {
        if ($window.width() <= 767) {
          return $('#left_sidebar').insertAfter('#blog_posts');
        } else if ($window.width() > 767) {
          return $('#left_sidebar').insertBefore('#blog_posts');
        }
      };
    }
    if (($('#gmap').length)) {
      new Maplace({
        show_markers: true,
        controls_type: 'list',
        locations: [
          {
            lat: -31.9522,
            lon: 115.9114,
            zoom: 12
          }
        ],
        map_options: {
          set_center: [-31.9520, 115.9110],
          zoom: 12,
          scrollwheel: false
        }
      }).Load();
    }
    if ($('form.contact').length && $.fn.validate) {
      $("form.contact").validate();
    }
    /* Single page
    */

    if (($('.onepage').length)) {
      $window.on('scroll', function() {
        if ($window.scrollTop() > 60) {
          return $('.flexnav-container').addClass('fixed');
        } else {
          return $('.flexnav-container').removeClass('fixed');
        }
      });
      if ($.fn.smoothScroll) {
        nav = $('.flexnav');
        nav.find('a').smoothScroll({
          offset: -50
        });
        nav.children('li:first-child').addClass('active');
        nav.children('li').on('click', function() {
          return $(this).siblings('li').removeClass('active').end().addClass('active');
        });
      }
      if ($.fn.parallax) {
        $('#about').parallax("50%", 0.1);
        $('#services').parallax("50%", 0.1);
      }
      if ($('.countdown').length && $.fn.countdown) {
        date = new Date(2014, 6 - 1, 26, 9);
        return $('.countdown').countdown({
          until: date,
          timezone: +10
        });
      }
    }
    /* End of Single page
    */

  });

  /*
  =Portfolio and Blog
  */


  $(function() {
    return $(window).load(function() {
      var $container, $filter, item, width;
      $container = $('#blog-waterfall');
      if ($container.length && $.fn.isotope) {
        $.Isotope.prototype._getCenteredMasonryColumns = function() {
          var colW, cols, parentWidth;
          this.width = this.element.width();
          parentWidth = this.element.parent().width();
          colW = this.options.masonry && this.options.masonry.columnWidth || this.$filteredAtoms.outerWidth(true) || parentWidth;
          cols = Math.floor(parentWidth / colW);
          cols = Math.max(cols, 1);
          this.masonry.cols = cols;
          this.masonry.columnWidth = colW;
        };
        $.Isotope.prototype._masonryReset = function() {
          var i;
          this.masonry = {};
          this._getCenteredMasonryColumns();
          i = this.masonry.cols;
          this.masonry.colYs = [];
          while (i--) {
            this.masonry.colYs.push(0);
          }
        };
        $.Isotope.prototype._masonryResizeChanged = function() {
          var prevColCount;
          prevColCount = this.masonry.cols;
          this._getCenteredMasonryColumns();
          return this.masonry.cols !== prevColCount;
        };
        $.Isotope.prototype._masonryGetContainerSize = function() {
          var i, unusedCols;
          unusedCols = 0;
          i = this.masonry.cols;
          while (--i) {
            if (this.masonry.colYs[i] !== 0) {
              break;
            }
            unusedCols++;
          }
          return {
            height: Math.max.apply(Math, this.masonry.colYs),
            width: (this.masonry.cols - unusedCols) * this.masonry.columnWidth
          };
        };
        $filter = $('#items_filter');
        item = '.post-isotope';
        width = 210;
        if ($filter.length) {
          $filter.children('li').first().addClass('active');
          $filter.children('li').on('click', function() {
            var $this;
            $this = $(this);
            $this.addClass('active');
            $this.siblings('li').removeClass('active');
            $container.isotope({
              filter: $this.attr('data-filter')
            });
            return false;
          });
        }
        return $container.isotope({
          itemSelector: item,
          animationEngine: 'jquery',
          masonry: {
            columnWidth: width
          }
        });
      }
    });
  });

  $(function() {
    var $window, initFlex;
    $window = $(window);
    $window.load(function() {
      if (($('.flexitems-4col').length)) {
        initFlex('.flexitems-4col', '.item-portfolio', 280, 210, 10);
        return $('.item-portfolio').each(function() {
          return $(this).hoverdir();
        });
      } else if (($('.flexitems').length)) {
        initFlex('.flexitems', '.item-portfolio', 400, 300, 5);
        return $('.item-portfolio').each(function() {
          return $(this).hoverdir();
        });
      }
    });
    return initFlex = function(container, item, itemWidth, itemHeight, itemMargin) {
      var $container, $items, columns, flex, height, newTotalWidth, ratio, resizeTimer, totalWidth, width;
      if (itemMargin == null) {
        itemMargin = 0;
      }
      $container = $(container);
      $items = $container.find(item);
      resizeTimer = null;
      totalWidth = itemWidth + itemMargin * 2;
      columns = Math.ceil($container.width() / totalWidth);
      newTotalWidth = Math.floor($container.width() / columns);
      width = newTotalWidth - itemMargin * 2;
      ratio = width / itemWidth;
      height = Math.floor(itemHeight * ratio);
      $items.css({
        width: width,
        height: height,
        margin: itemMargin
      });
      $window.resize(function() {
        clearTimeout(resizeTimer);
        return resizeTimer = setTimeout(flex, 200);
      });
      return flex = function() {
        columns = Math.ceil($container.width() / totalWidth);
        newTotalWidth = Math.floor($container.width() / columns);
        width = newTotalWidth - itemMargin * 2;
        ratio = width / itemWidth;
        height = Math.floor(itemHeight * ratio);
        return $items.animate({
          width: width,
          height: height
        });
      };
    };
  });

  $(function() {
    var $window, initMasonryGrid;
    $window = $(window);
    $window.load(function() {
      if (($('#blog_grid').length)) {
        return initMasonryGrid('#items_filter', '#items_container', '#blog_grid', '.post-isotope', 480, 15);
      } else if (($('#portfolio_grid').length)) {
        return initMasonryGrid('#items_filter', '#items_container', '#portfolio_grid', '.item-portfolio', 400, 15);
      } else if ($('#seamless_grid_alt')) {
        initMasonryGrid('#items_filter', '#items_container', '#seamless_grid_alt', '.item-portfolio', 400, 0);
        return $('.item-portfolio').each(function() {
          return $(this).hoverdir();
        });
      }
    });
    initMasonryGrid = function(filter, container, grid, item, itemWidth, itemMargin) {
      var $container, $filter, $grid, $items, columns, newTotalWidth, resizeGrid, resizeTimer, totalWidth, width;
      if (itemMargin == null) {
        itemMargin = 0;
      }
      $filter = $(filter);
      $container = $(container);
      $grid = $(grid);
      $items = $grid.children(item);
      resizeTimer = null;
      totalWidth = itemWidth + itemMargin * 2;
      columns = Math.ceil($container.width() / totalWidth);
      newTotalWidth = Math.floor($container.width() / columns);
      width = newTotalWidth - itemMargin * 2;
      $grid.width(newTotalWidth * columns);
      $items.css({
        width: width,
        margin: itemMargin
      });
      $window.trigger('resizeIframes');
      if ($filter.length) {
        $filter.children('li').first().addClass('active');
        $filter.children('li').on('click', function() {
          var $this, selector;
          $this = $(this);
          selector = $this.attr('data-filter');
          $this.addClass('active');
          $this.siblings('li').removeClass('active');
          $grid.isotope({
            filter: selector
          });
          return false;
        });
      }
      if ($.browser.msie && $.browser.version[0] === '8') {
        $grid.isotope({
          resizable: false,
          itemSelector: item,
          animationOptions: {
            duration: 300
          },
          transformsEnabled: false,
          animationEngine: 'jquery',
          masonry: {
            columnWidth: newTotalWidth
          }
        });
        $items.stop(true).fadeTo(500, 1);
      } else {
        $grid.imagesLoaded(function() {
          $grid.isotope({
            resizable: false,
            itemSelector: item,
            animationOptions: {
              duration: 300
            },
            transformsEnabled: false,
            animationEngine: 'jquery',
            masonry: {
              columnWidth: newTotalWidth
            }
          });
          return $items.stop(true).fadeTo(500, 1);
        });
      }
      $window.resize(function() {
        clearTimeout(resizeTimer);
        return resizeTimer = setTimeout(resizeGrid, 200);
      });
      return resizeGrid = function() {
        columns = Math.ceil($container.width() / totalWidth);
        newTotalWidth = Math.floor($container.width() / columns);
        width = newTotalWidth - itemMargin * 2;
        $grid.width(newTotalWidth * columns);
        $items.css({
          width: width
        });
        $window.trigger('resizeIframes');
        return $grid.isotope({
          masonry: {
            columnWidth: newTotalWidth
          }
        });
      };
    };
    if (($('#blog_grid').length)) {
      return initMasonryGrid('#items_filter', '#items_container', '#blog_grid', '.post-isotope', 480, 15);
    } else if (($('#portfolio_grid').length)) {
      return initMasonryGrid('#items_filter', '#items_container', '#portfolio_grid', '.item-portfolio', 400, 15);
    }
  });

  $(function() {
    var $window, initGrid;
    $window = $(window);
    $window.load(function() {
      if (($('#seamless_grid').length)) {
        initGrid('#items_filter', '#items_container', '#seamless_grid', '.item-portfolio', 400, 300);
        return $('.item-portfolio').each(function() {
          return $(this).hoverdir();
        });
      }
    });
    return initGrid = function(filter, container, grid, item, itemWidth, itemHeight) {
      var $container, $filter, $grid, $items, columns, height, ratio, resizeGrid, resizeTimer, width;
      $filter = $(filter);
      $container = $(container);
      $grid = $(grid);
      $items = $grid.children(item);
      columns = Math.ceil($container.width() / itemWidth);
      width = Math.floor($container.width() / columns);
      ratio = width / itemWidth;
      height = Math.floor(itemHeight * ratio);
      resizeTimer = null;
      $grid.width(width * columns);
      $items.css({
        width: width,
        height: height
      });
      if ($filter.length) {
        $filter.children('li').first().addClass('active');
        $filter.children('li').on('click', function() {
          var $this, selector;
          $this = $(this);
          selector = $this.attr('data-filter');
          $this.addClass('active');
          $this.siblings('li').removeClass('active');
          $grid.isotope({
            filter: selector
          });
          return false;
        });
      }
      if ($.browser.msie && $.browser.version[0] === '8') {
        $grid.isotope({
          resizable: false,
          itemSelector: '.item-portfolio',
          animationOptions: {
            duration: 300
          },
          transformsEnabled: false,
          animationEngine: 'jquery',
          layoutMode: 'cellsByRow',
          cellsByRow: {
            columnWidth: width,
            rowHeight: height
          }
        });
        $items.stop(true).fadeTo(500, 1);
      } else {
        $grid.imagesLoaded(function() {
          $grid.isotope({
            resizable: false,
            itemSelector: '.item-portfolio',
            animationOptions: {
              duration: 300
            },
            transformsEnabled: false,
            animationEngine: 'jquery',
            layoutMode: 'cellsByRow',
            cellsByRow: {
              columnWidth: width,
              rowHeight: height
            }
          });
          return $items.stop(true).fadeTo(500, 1);
        });
      }
      $window.resize(function() {
        clearTimeout(resizeTimer);
        return resizeTimer = setTimeout(resizeGrid, 200);
      });
      return resizeGrid = function() {
        columns = Math.ceil($container.width() / itemWidth);
        width = Math.floor($container.width() / columns);
        ratio = width / itemWidth;
        height = Math.floor(itemHeight * ratio);
        $grid.width(width * columns);
        $items.css({
          width: width,
          height: height
        });
        return $grid.isotope({
          cellsByRow: {
            columnWidth: width,
            rowHeight: height
          }
        });
      };
    };
  });

  $(function() {
    var flexContainer, margin, width;
    if ($('.flexslider-normal').length && $.fn.flexslider) {
      flexContainer = $('.flexslider-normal');
      $(window).load(function() {
        return flexContainer.flexslider({
          animation: "slide",
          animationLoop: true,
          pauseOnHover: false,
          slideshowSpeed: 7000,
          direction: "horizontal",
          controlNav: false
        });
      });
    }
    if ($('.flexslider-carousel').length && $.fn.flexslider) {
      flexContainer = $('.flexslider-carousel');
      width = 280;
      margin = 15;
      $(window).load(function() {
        return flexContainer.flexslider({
          animation: "slide",
          animationLoop: false,
          pauseOnHover: false,
          itemWidth: width,
          itemMargin: margin,
          minItems: 1,
          maxItems: 4,
          slideshowSpeed: 5000,
          move: 1,
          direction: "horizontal",
          directionNav: true,
          controlNav: true
        });
      });
    }
    if ($('#camera_wrap').length && $.fn.camera) {
      jQuery('#camera_wrap').camera({
        hover: false,
        imagePath: 'js/vendor/camera/images/',
        height: '500px',
        pagination: false,
        thumbnails: true
      });
    }
    if ($('#camera_bg').length && $.fn.camera) {
      jQuery('#camera_bg').camera({
        hover: false,
        imagePath: 'js/vendor/camera/images/',
        height: '600px',
        hover: false,
        pagination: false,
        thumbnails: false,
        navigation: false,
        navigationHover: false,
        mobileNavHover: false,
        playPause: false,
        pauseOnClick: false
      });
    }
    if ($('#revolution_slider').length && $.fn.revolution) {
      return $('#revolution_slider').revolution({
        delay: 9000,
        startheight: 460,
        startwidth: 1170,
        hideThumbs: 200,
        thumbWidth: 100,
        thumbHeight: 50,
        thumbAmount: 5,
        navigationType: "bullet",
        navigationArrows: "solo",
        navigationStyle: "round",
        navigationHAlign: "center",
        navigationVAlign: "bottom",
        navigationHOffset: 0,
        navigationVOffset: 20,
        soloArrowLeftHalign: "left",
        soloArrowLeftValign: "center",
        soloArrowLeftHOffset: 20,
        soloArrowLeftVOffset: 0,
        soloArrowRightHalign: "right",
        soloArrowRightValign: "center",
        soloArrowRightHOffset: 20,
        soloArrowRightVOffset: 0,
        touchenabled: "on",
        onHoverStop: "on",
        stopAtSlide: -1,
        stopAfterLoops: -1,
        hideCaptionAtLimit: 0,
        hideAllCaptionAtLilmit: 0,
        hideSliderAtLimit: 0,
        shadow: 0,
        fullWidth: "on"
      });
    }
  });

}).call(this);
